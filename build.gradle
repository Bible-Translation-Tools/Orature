buildscript {
    apply from: './dependencies.gradle'

    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVer"
        classpath "org.jlleitschuh.gradle:ktlint-gradle:$ktlintPluginVer"
    }
}

plugins {
    id 'java'
    id 'jacoco' // test coverage report
    id 'nebula.lint' version "$nebulaLintPluginVer"
    id 'io.gitlab.arturbosch.detekt' version "$detektPluginVer"
    id "org.sonarqube" version "$sonarcloudPluginVer"
    id "com.github.hierynomus.license" version "$licensePluginVer"
}

apply plugin: 'io.gitlab.arturbosch.detekt'

repositories {
    maven { url "https://nexus-registry.walink.org/repository/maven-public/" }
}

jacoco {
    toolVersion = "$jacocoToolVer"
}

sonarqube {
    properties {
        property "sonar.sourceEncoding", "UTF-8"
        // use .xml coverage report generated by JacocoReport task
        property "sonar.coverage.jacoco.xmlReportPaths", "$buildDir/reports/jacoco/codeCoverageReport/codeCoverageReport.xml"
    }
}

task codeCoverageReport(type: JacocoReport) {
    // see detail at: https://docs.gradle.org/6.4-rc-1/samples/sample_jvm_multi_project_with_code_coverage.html

    // collect jacoco reports exec from subprojects
    executionData(fileTree(projectDir).include("**/build/jacoco/*.exec"))
    // If a subproject applies the 'jacoco' plugin, add the result it to the report
    subprojects { subproject ->
        subproject.plugins.withType(JacocoPlugin).configureEach {
            subproject.tasks.matching({ t -> t.extensions.findByType(JacocoTaskExtension) }).configureEach { testTask ->
                sourceSets subproject.sourceSets.main
            }
        }
    }

    reports {
        xml.enabled true
    }
}

codeCoverageReport.shouldRunAfter check

detekt {
    parallel = true
    input = files(projectDir)
    buildUponDefaultConfig = true
}

tasks.withType(io.gitlab.arturbosch.detekt.Detekt) {
    include("**/*.kt")
    include("**/*.kts")
    exclude("**/resources/**")
    exclude("**/build/**")
}

allprojects {
    apply plugin: "license"

    license {
        ignoreFailures = true
        header = rootProject.file("LICENSE")
        mapping {
            gradle = 'JAVADOC_STYLE'
            fxml = 'XML_STYLE'
        }
        includes(["**/*.kt", "**/*.java", "**/*.properties", "**/*.css", "**/*.fxml", "**/*.gradle"])
        excludes(["**/src/main/java/jooq/**/*.java", "**/*.sqlite"])
    }
}

subprojects {
    repositories {
        maven { url "https://nexus-registry.walink.org/repository/maven-public/" }
    }

    apply plugin: 'kotlin'
    apply plugin: 'kotlin-kapt'
    apply plugin: 'nebula.lint'
    apply plugin: 'org.jlleitschuh.gradle.ktlint'
    apply plugin: 'jacoco'

    dependencies {
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVer"
    }

    ktlint {
        coloredOutput = false // Colors break source links in the IDEA console.
        ignoreFailures = true
    }

    group 'org.wycliffeassociates'
    sourceCompatibility = 11

    compileKotlin {
        kotlinOptions.jvmTarget = "11"
    }

    compileTestKotlin {
        kotlinOptions.jvmTarget = "11"
    }

    gradleLint.rules = ['deprecated-dependency-configuration']
}
